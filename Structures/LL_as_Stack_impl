#include <iostream>
using namespace std;

class Node {
public:
	Node* next;
	int data;

	Node(int new_data) {
		this->next = nullptr;
		this->data = new_data;
	}
};

class Stack {
	Node* head;

public:
	Stack() {
		this->head = nullptr; 
	}
	
	bool isEmpty() {
		return head == nullptr;
	}

	void push(int new_data) {

		Node* new_node = new Node(new_data);
		new_node->next = head;
		head = new_node;
		
	}

	void pop() {
		if (this->isEmpty()) {
			cout << "Stack underflow" << endl;
			return;
		}


		Node* temp = head;
		head = head->next;
		delete temp;
	}


	int peek() {
		if (this->isEmpty()) {
			cout << "Stack underflow" << endl;
		}
		else
			return head->data;
	}

	void display() {
		Node* temp = head;
		while (temp != nullptr) {
			cout <<temp->data<<" ";
			temp = temp->next;

		}

	}
};

int main() {
	Stack st;
	
	st.push(10);
	st.push(15);
	st.push(50);
	st.push(606);
	
	cout << "Stack is ";
	st.display();

	
	st.pop();

	cout << endl << "After popping " ;
	st.display();

	cout <<endl<< "Top element is " << st.peek();


	return 0;


}
