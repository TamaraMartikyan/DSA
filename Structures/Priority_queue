#include <iostream>
#include <queue>
#include <vector>

using namespace std;


struct Task {
    int id;
    int priority; // 1 to 5 (1 is highest)
    int deadline; // smaller is earlier

    Task(int i, int p, int d) {
        id = i;
        priority = p;
        deadline = d;
    }
};


struct CompareTask {
    bool operator()(Task const& a, Task const& b) {
    
        if (a.priority != b.priority)
            return a.priority > b.priority;

        return a.deadline > b.deadline;
    }
};

int main() {
   
    priority_queue<Task, vector<Task>, CompareTask> pq;

   
    pq.push(Task(1, 3, 10));  // id=1, priority=3, deadline=10
    pq.push(Task(2, 2, 12));  
    pq.push(Task(3, 2, 8));   
    pq.push(Task(4, 1, 20)); 
    pq.push(Task(5, 1, 5));   

    
    cout << "Order of processing tasks:\n";
    while (!pq.empty()) {
        Task t = pq.top();
        pq.pop();
        cout << "Task ID: " << t.id
             << " | Priority: " << t.priority
             << " | Deadline: " << t.deadline << endl;
    }

    return 0;
}
